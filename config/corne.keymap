/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        bth: bth {
            compatible = "zmk,behavior-hold-tap";
            label = "BTH";
            bindings = <&bt>, <&bt>;

            #binding-cells = <2>;
            tapping-term-ms = <5000>;
            flavor = "tap-preferred";
        };

        del: del {
            compatible = "zmk,behavior-mod-morph";
            label = "del";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        lbkt: lbkt {
            compatible = "zmk,behavior-tap-dance";
            label = "lbkt";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp LBRC>, <&kp LBKT>;
        };

        rbkt: rbkt {
            compatible = "zmk,behavior-tap-dance";
            label = "rbkt";
            #binding-cells = <0>;
            bindings = <&kp RPAR>, <&kp RBRC>, <&kp RBKT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&lbkt  &kp Q         &kp W        &kp F        &kp P         &kp B        &kp J    &kp L         &kp U        &kp Y        &kp SQT       &rbkt
&to 3  &hrm LSHFT A  &hrm LALT R  &hrm LCMD S  &hrm LCTRL T  &kp G        &kp M    &hrm RCTRL N  &hrm RCMD E  &hrm RALT I  &hrm RSHFT O  &to 1
&to 0  &kp Z         &kp X        &kp C        &kp D         &kp V        &kp K    &kp H         &kp COMMA    &kp DOT      &kp FSLH      &to 2
                                  &kp TAB      &mo 3         &kp SPACE    &kp RET  &mo 1         &kp ESC
            >;

            label = "BASE";
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &kp PG_DN  &kp PG_UP  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans     &trans     &trans     &trans
                        &trans  &trans  &del      &trans  &trans    &trans
            >;

            label = "NAV";
        };

        EDIT {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans      &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LS(LEFT)  &kp LS(DOWN)  &kp LS(UP)  &kp LS(RIGHT)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans      &trans         &trans
                        &trans  &trans  &del      &trans  &trans        &trans
            >;

            label = "EDIT";
        };

        NUM {
            bindings = <
&trans  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)   &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &trans
&trans  &kp N1        &kp N2      &kp N3         &kp N4         &kp N5           &kp N6         &kp N7        &kp N8        &kp N9        &kp N0        &trans
&trans  &kp MINUS     &kp EQUAL   &kp GRAVE      &kp BACKSLASH  &trans           &trans         &trans        &trans        &trans        &trans        &trans
                                  &trans         &trans         &trans           &trans         &trans        &to 0
            >;

            label = "NUM";
        };
    };
};
