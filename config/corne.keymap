/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        bsdel: bsdel {
            compatible = "zmk,behavior-mod-morph";
            label = "BS | DEL(CTRL)";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        motd: motd {
            compatible = "zmk,behavior-tap-dance";
            label = "MO (tap-dance)";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 2>;

            tapping-term-ms = <350>;
        };

        moto: moto {
            compatible = "zmk,behavior-hold-tap";
            label = "MO(hold) | TO(tap)";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        dot: dot {
            compatible = "zmk,behavior-mod-morph";
            label = "coma | dot (soft)";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp DOT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bracket: bracket {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACKET";
            bindings = <&square>, <&curly>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        CAPS_WORD {
            bindings = <&caps_word>;
            key-positions = <13 22>;
            layers = <0>;
        };
    };

    macros {
        curly: curly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>, <&macro_tap>;

            label = "CURLY";
        };

        round: round {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>,
                <&macro_tap>;

            label = "ROUND";
        };

        square: square {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>,
                <&macro_tap>;

            label = "SQUARE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&round   &kp Q         &kp W        &kp F        &kp P          &kp B        &kp J    &kp L         &kp U        &kp Y        &kp SQT       &kp SEMI
&square  &hrm LSHFT A  &hrm LALT R  &hrm LCMD S  &hrm LCTRL T   &kp G        &kp M    &hrm RCTRL N  &hrm RCMD E  &hrm RALT I  &hrm RSHFT O  &key_repeat
&curly   &kp Z         &kp X        &kp C        &kp D          &kp V        &kp K    &kp H         &kp MINUS    &dot         &kp FSLH      &kp PIPE
                                    &kp TAB      &kp BACKSPACE  &kp SPACE    &kp RET  &motd         &lt 3 ESC
            >;

            label = "BASE";
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &kp PG_DN  &kp PG_UP  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &to 1
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans     &trans     &trans     &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;

            label = "NAV";
        };

        EDIT {
            bindings = <
&trans  &trans  &trans     &kp K_FIND  &kp K_PASTE  &trans    &trans  &trans        &kp K_UNDO    &kp K_COPY  &trans         &trans
&trans  &trans  &trans     &trans      &trans       &trans    &trans  &kp LS(LEFT)  &kp LS(DOWN)  &kp LS(UP)  &kp LS(RIGHT)  &trans
&trans  &trans  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &trans    &trans  &trans        &trans        &trans      &trans         &trans
                           &trans      &bsdel       &trans    &trans  &trans        &trans
            >;

            label = "EDIT";
        };

        NUM {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &trans  &kp GRAVE  &kp COLON
&trans  &kp N1           &kp N2       &kp N3     &kp N4      &kp N5         &kp N6     &kp N7         &kp N8        &kp N9  &kp N0     &to 3
&trans  &trans           &trans       &trans     &trans      &trans         &trans     &trans         &kp EQUAL     &trans  &kp TILDE  &kp AMPERSAND
                                      &trans     &kp DEL     &trans         &trans     &trans         &trans
            >;

            label = "NUM";
        };
    };
};
