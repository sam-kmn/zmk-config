/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        motd: motd {
            compatible = "zmk,behavior-tap-dance";
            label = "MO (tap-dance)";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 0>;

            tapping-term-ms = <350>;
        };

        moto: moto {
            compatible = "zmk,behavior-hold-tap";
            label = "MO(hold) | TO(tap)";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        hold3s: hold3s {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold 3s > Toggle layer";
            bindings = <&tog>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <3000>;
        };
    };

    combos {
        compatible = "zmk,combos";

        CAPS_WORD {
            bindings = <&caps_word>;
            key-positions = <13 22>;
            layers = <0>;
        };
    };

    macros {
        curly: curly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>, <&macro_tap>;

            label = "{}";
        };

        round: round {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>,
                <&macro_tap>;

            label = "()";
        };

        square: square {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>,
                <&macro_tap>;

            label = "[]";
        };

        angle: angle {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp GREATER_THAN &kp LEFT>, <&macro_tap>;

            label = "ANGLE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        COLEMAK {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&round     &kp Q         &kp W        &kp F        &kp P          &kp B        &kp J    &kp L         &kp U        &kp Y        &kp MINUS     &kp EQUAL
&curly     &hrm LSHFT A  &hrm LALT R  &hrm LCMD S  &hrm LCTRL T   &kp G        &kp M    &hrm RCTRL N  &hrm RCMD E  &hrm RALT I  &hrm RSHFT O  &kp SEMI
&kp GLOBE  &kp Z         &kp X        &kp C        &kp D          &kp V        &kp K    &kp H         &kp SQT      &kp DOT      &kp FSLH      &kp PIPE
                                      &kp TAB      &kp BACKSPACE  &kp SPACE    &kp RET  &mo 1         &gresc
            >;

            label = "COLEMAK";
        };

        NAVI {
            bindings = <
&angle           &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7       &kp N8      &kp N9     &kp N0     &kp PLUS
&square          &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT     &kp DOWN    &kp UP     &kp RIGHT  &trans
&hold3s 2 GLOBE  &trans  &trans  &trans  &trans  &trans    &trans  &kp K_PASTE  &kp K_COPY  &kp K_CUT  &kp TILDE  &kp AMPERSAND
                                 &trans  &trans  &trans    &trans  &trans       &trans
            >;

            label = "NAVI";
        };

        CONF {
            bindings = <
&bt BT_NXT  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&to 0       &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                            &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
